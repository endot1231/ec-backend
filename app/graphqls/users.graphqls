type AuthPayload {
  token: String
}

type User implements Node{
  id: ID!
  name: String!
  email: String!
  password: String!
}

input UserLoginInput{
  email: String!
  password: String!
}

input UserCreateInput{
  name: String!
  email: String!
  password: String!
}

extend type Query {
  user(
    name: String
    age: Int
  ): User
  users:[User]
}

extend type Mutation {
  Login(data: UserLoginInput!): AuthPayload!
  CreateUser(data: UserCreateInput!): User!
}