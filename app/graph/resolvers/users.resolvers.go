package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/endot1231/ec-backend/graph/model"
)

// CreateUser is the resolver for the CreateUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, data model.UserCreateInput) (*model.User, error) {
	user, err := r.Srv.CreateUser(ctx, data.Name, data.Email, data.Password)
	if err != nil {
		panic(err)
	}
	return user, nil
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, name *string, age *int) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	users, err := r.Srv.GetUsers(ctx)
	if err != nil {
		panic(err)
	}
	return users, nil
}
