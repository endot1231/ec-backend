// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminsColumns holds the columns for the "admins" table.
	AdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "email_verified", Type: field.TypeTime, Nullable: true},
		{Name: "password", Type: field.TypeString},
		{Name: "remember_token", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// AdminsTable holds the schema information for the "admins" table.
	AdminsTable = &schema.Table{
		Name:       "admins",
		Columns:    AdminsColumns,
		PrimaryKey: []*schema.Column{AdminsColumns[0]},
	}
	// CompaniesColumns holds the columns for the "companies" table.
	CompaniesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// CompaniesTable holds the schema information for the "companies" table.
	CompaniesTable = &schema.Table{
		Name:       "companies",
		Columns:    CompaniesColumns,
		PrimaryKey: []*schema.Column{CompaniesColumns[0]},
	}
	// ProductBrandsColumns holds the columns for the "product_brands" table.
	ProductBrandsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// ProductBrandsTable holds the schema information for the "product_brands" table.
	ProductBrandsTable = &schema.Table{
		Name:       "product_brands",
		Columns:    ProductBrandsColumns,
		PrimaryKey: []*schema.Column{ProductBrandsColumns[0]},
	}
	// ProductCategoriesColumns holds the columns for the "product_categories" table.
	ProductCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// ProductCategoriesTable holds the schema information for the "product_categories" table.
	ProductCategoriesTable = &schema.Table{
		Name:       "product_categories",
		Columns:    ProductCategoriesColumns,
		PrimaryKey: []*schema.Column{ProductCategoriesColumns[0]},
	}
	// ProductColorsColumns holds the columns for the "product_colors" table.
	ProductColorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// ProductColorsTable holds the schema information for the "product_colors" table.
	ProductColorsTable = &schema.Table{
		Name:       "product_colors",
		Columns:    ProductColorsColumns,
		PrimaryKey: []*schema.Column{ProductColorsColumns[0]},
	}
	// ProductSizesColumns holds the columns for the "product_sizes" table.
	ProductSizesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeString},
		{Name: "size", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// ProductSizesTable holds the schema information for the "product_sizes" table.
	ProductSizesTable = &schema.Table{
		Name:       "product_sizes",
		Columns:    ProductSizesColumns,
		PrimaryKey: []*schema.Column{ProductSizesColumns[0]},
	}
	// ProductStocksColumns holds the columns for the "product_stocks" table.
	ProductStocksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "description", Type: field.TypeString},
		{Name: "price", Type: field.TypeInt},
		{Name: "stock_quantity", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ProductStocksTable holds the schema information for the "product_stocks" table.
	ProductStocksTable = &schema.Table{
		Name:       "product_stocks",
		Columns:    ProductStocksColumns,
		PrimaryKey: []*schema.Column{ProductStocksColumns[0]},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "shop_id", Type: field.TypeInt64},
		{Name: "product_category_id", Type: field.TypeInt64},
		{Name: "product_brand_id", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
	}
	// ReviewsColumns holds the columns for the "reviews" table.
	ReviewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "contents", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// ReviewsTable holds the schema information for the "reviews" table.
	ReviewsTable = &schema.Table{
		Name:       "reviews",
		Columns:    ReviewsColumns,
		PrimaryKey: []*schema.Column{ReviewsColumns[0]},
	}
	// ShopsColumns holds the columns for the "shops" table.
	ShopsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "email_verified", Type: field.TypeTime, Nullable: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "remember_token", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// ShopsTable holds the schema information for the "shops" table.
	ShopsTable = &schema.Table{
		Name:       "shops",
		Columns:    ShopsColumns,
		PrimaryKey: []*schema.Column{ShopsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "email_verified", Type: field.TypeTime, Nullable: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "remember_token", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UsersReviewsColumns holds the columns for the "users_reviews" table.
	UsersReviewsColumns = []*schema.Column{
		{Name: "users_id", Type: field.TypeInt},
		{Name: "reviews_id", Type: field.TypeInt},
	}
	// UsersReviewsTable holds the schema information for the "users_reviews" table.
	UsersReviewsTable = &schema.Table{
		Name:       "users_reviews",
		Columns:    UsersReviewsColumns,
		PrimaryKey: []*schema.Column{UsersReviewsColumns[0], UsersReviewsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_reviews_users_id",
				Columns:    []*schema.Column{UsersReviewsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "users_reviews_reviews_id",
				Columns:    []*schema.Column{UsersReviewsColumns[1]},
				RefColumns: []*schema.Column{ReviewsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminsTable,
		CompaniesTable,
		ProductBrandsTable,
		ProductCategoriesTable,
		ProductColorsTable,
		ProductSizesTable,
		ProductStocksTable,
		ProductsTable,
		ReviewsTable,
		ShopsTable,
		UsersTable,
		UsersReviewsTable,
	}
)

func init() {
	UsersReviewsTable.ForeignKeys[0].RefTable = UsersTable
	UsersReviewsTable.ForeignKeys[1].RefTable = ReviewsTable
}
